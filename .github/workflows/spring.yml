# ‚úñÔ∏è‚úñÔ∏è‚úñÔ∏è Temporarily disabled: automatic configuration updates ‚úñÔ∏è‚úñÔ∏è‚úñÔ∏è
# ------------------------------------------------------
# Reason:
#   Cloudflare Warp configurations are currently blocked in certain regions
#   (notably Iran and China). The automatic update process in this workflow
#   replaces not only endpoints, but also critical fields such as
#   private_key, reserved, mtu, and address ‚Äî which breaks connectivity
#   when regionally restricted.
#
# Action:
#   This workflow is intentionally commented out (disabled) to prevent
#   overwriting the manually working configuration. I will manually set
#   the following IPs/domains, Private Keys, Addresses and related parameters
#   until the restrictions are lifted.
#
# Working configuration (manually applied):
#   ‚Ä¢ IPv4 range: 162.159.192.1 ‚Äî 162.159.192.20
#   ‚Ä¢ IPv4 range: 162.159.195.1 ‚Äî 162.159.195.10
#   ‚Ä¢ IPv6 range: 2606:4700:d0::a29f:c001 ‚Äî 2606:4700:d0::a29f:c014
#   ‚Ä¢ Custom domain: wire.nscl.ir
#
# Important:
#   ‚ö†Ô∏è Do NOT re-enable or edit this workflow to auto-replace configs
#   while these regional blocks remain active.
#
# Re-enable procedure:
#   You can still run it manually from actions, But if you want to re-enable:
#   1. Verify that Cloudflare/Warp endpoints are accessible again
#      from affected regions (Iran/China).
#   2. Uncomment this section to restore the workflow:
#      lines 39, 40 ... and 45.
#   3. Test connectivity in staging before pushing to production.
#
# Disabled on: 18 October, 2025 ‚Äî Freedom to Dream ü©∂

name: Spring

on:
#  push:
#    branches: 'main'
#    paths:
#      - '**/spring.*'
#      - '**/singbox-template.*'
#  schedule:
#    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ['3.13']
        dummy: ['single']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('edge/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f edge/requirements.txt ]; then
            pip install -r edge/requirements.txt
          else
            echo "requirements.txt not found, skipping dependency installation."
          fi

      - name: Run Script
        run: python edge/spring.py

      - name: Commit and push if changed
        run: |
          git config --local user.name "Diana-Cl"
          git config --local user.email "135276904+Diana-Cl@users.noreply.github.com"
          
          # Add all generated JSON files to staging
          git add *.json
          
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            echo "Changes detected. Committing and pushing..."
            git commit -m "Automated config refresh completed at: $(TZ='Asia/Tehran' date '+%H:%M:%S')" -m "Wireguard private keys, reserved, addresses and all IPs have been renewed"
            git -c committer.name="NiREvil" -c committer.email="126243832+NiREvil@users.noreply.github.com" commit --amend --no-edit
            git push
          fi
